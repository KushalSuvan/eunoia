[project]
name = "agent"
version = "0.0.1"
description = "Starter template for making a new agent LangGraph."
authors = [
    { name = "KushalSuvan", email = "kushalsuvanjenamani@gmail.com" },
]
readme = "README.md"
license = { text = "Apache-2.0" }
requires-python = ">=3.11"
dependencies = [
    "langgraph>=0.2.6",
    "python-dotenv>=1.0.1",
    "langchain[groq] (>=0.3.25,<0.4.0)",
    "langgraph-cli[inmem] (>=0.2.10,<0.3.0)",
    "langchain-anthropic (>=0.3.13,<0.4.0)",
]


[project.optional-dependencies]
dev = ["mypy", "ruff"]

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["langgraph.templates.agent", "agent"]
[tool.setuptools.package-dir]
"langgraph.templates.agent" = "src/agent"
"agent" = "src/agent"

[tool.poetry.dependencies]
python = ">=3.11,<4.0"

[tool.setuptools.package-data]
"*" = ["py.typed"]

[tool.ruff]
lint.select = [
    "E",    # pycodestyle
    "F",    # pyflakes
    "I",    # isort
    "D",    # pydocstyle
    "D401", # First line should be in imperative mood
    "T201",
    "UP",
]
lint.ignore = [
    "UP006",
    "UP007",
    # We actually do want to import from typing_extensions
    "UP035",
    # Relax the convention by _not_ requiring documentation for every function parameter.
    "D417",
    "E501",
]
[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D", "UP"]
[tool.ruff.lint.pydocstyle]
convention = "google"

[dependency-groups]
dev = [
    "anyio",
    "langgraph-cli[inmem]",
    "mypy",
    "pytest",
    "ruff",
]
